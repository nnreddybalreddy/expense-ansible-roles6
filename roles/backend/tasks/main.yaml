
- name: dnf module disable nodejs -y
  ansible.builtin.command: dnf module disable nodejs -y

- name: dnf module enable nodejs:20 -y
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: dnf install nodejs -y
  ansible.builtin.dnf:
    name: "{{item}}"
    state: latest
  loop:
  - nodejs
  - mysql

- name: useradd expense
  ansible.builtin.user:
    name: expense

# - name: mkdir /app
#   ansible.builtin.file:  
#     path: /app  
#     state: directory

# - name: unzip
#   ansible.builtin.unarchive:
#     src: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#     dest: /app
#     remote_src: yes 

- name: run app pre-requisites
  ansible.builtin.import_role:
    name: common
    tasks_from: app-pre-req.yaml
    vars_from: vars/main.yaml

- name: npm install      
  ansible.builtin.command: npm install
  args:
    chdir: /app   

# - name: /etc/systemd/system/backend.service
#   ansible.builtin.copy:
#     src: backend.service
#     dest: /etc/systemd/system/backend.service

- name: copy backend service
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: install python mysql dependencies
  ansible.builtin.pip: 
    name:
    - PyMySQL # to connect MySQL DB from Ansible
    - cryptography
    executable: pip3.9 # pip3.11 if python version is 3.11

- name: import data into mysql
  community.mysql.mysql_db:
    login_user: "{{login_user}}"
    login_password: "{{ mysql_root_password }}"
    login_host: "{{ DB_HOST }}"
    target: /app/schema/backend.sql
    state: import
    name: all

- name: systemctl daemon-reload
  ansible.builtin.systemd_service:
    daemon_reload: true  

- name: start and enable backend service
  ansible.builtin.service:
    name: backend
    state: started
    enabled: yes   